# CSS

All of this can be done inside html file, but style sheets are the alterantive to have 'privacy', aka private elements so to say

- Styling: setting properties to change the look
                    - properties are name or value pairs 
                        - can be used in variety of ways 
                                [ "background-color: blue;" ] * simple property 
                                
                                [ "font-family: 'Open Sans', sans-serif;" ] * multi-valued property; list of what fonts can be supported
  "" is only for syntax color                        
                                [ "border: 1px solid #808080;" ] * multi-part property; how wide is border, solid or dashed, and color 
                                
                                [ "padding: 4px;" ] * directional property; padding set to 4 pixels, which is top-bottom-left-right
                                [ "padding: 4px 8px;" ] * vertical and horizontal; top and bottom=4, left and right=8
                                [ "padding: 4px 8px 6px 9px;" ] * all four directions; top-bottom-left-right 
                                [ "padding-left: 8px;" ] * individual direction; defines one of the four directions 

        - Format: 

            body {                * Rule, container for properties
                font-size: 11px;  * property
                color: white;     * property; short or long list with curly brace before and after 
            }                         * do not have to be on their own line and white spaces ignored; can put them all on one line or separatly

           [ <main style="background-color: rgb(198, 206, 214); padding: 4px; color: #202020;"> ]


        
        - <style></style> :  * set of text that assigns value/object with designated attributes/values in the 'format' above
                             * applies to all values with that name element 
                             * can add multiable by separating with comma:
                                h1, h2 {}
                <style>
                    main {
                    background-color: rgb(198, 206, 214);
                    padding: 4px;
                    color: #202020;
                    }
                </style>


# Cascading Rule  - whats ahead of the other is overruled/changed 

    body {                  - Rule (container for properties)
        font-size: 11px;
    }

    body {                  - Later property wins [ overrides default behavior in some other file ]
        font-size: 12px;
    }


    body {                 - Less specific or higher in hierarchy
        font-size: 11px;
    }

    h1 {                   - More specific of lower in hierarchy win
        font-size: 18px;    * child of the body, overrides the behavior in this scenario of being after the body 
    }
    

     - <link> : to point at a file, when its in the same directory; telling the page that the link to the css file is a stylesheet
                     * always at the top of the document, and usually in header so it loads them as early as possible
            <link rel="stylesheet" href="/html/sites.css" />

    - font-family : font-family: Verdana, Geneva, Tahoma, sans-serif;
                    * list in the order that vs is going to try and find the fonts
                     [ was in h1, h2; moved to body due to cascading rule] 
    
    - border-radius: 4px; * the larger the more rounded; like a crop option